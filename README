** NOTE: This code isn't finished yet! :') The README is however written as it will appear in the finished code... **

This project is a proof of concept/demo code of an OCR-implementation in Android. It is the companion piece of a presentation I (Pjotter Tommassen) gave at Droidcon UK 2013, the visual support of which can be found here: http://prezi.com/jdwz8spthvom/implementing-ocr-in-android-applications/

For those not interested in the presentation, it is basically an implementation of the following articles:
* B. Epshtein, E. Ofek, and Y. Wexler. Detecting text in natural scenes with stroke width transform. In Proc. CVPR, 2010.
* Cong Yao, Xiang Bai, Wenyu Liu, Yi Ma, Zhuowen Tu. Detecting Texts of Arbitrary Orientations in Natural Images. In Proc. CVPR, 2012.
(though the latter one is only implemented partially)

This is most definitely not the implementation mentioned during the presentation (since that one was built for a customer and therefore NDA'ed and copyrighted and such), but a reimplementation I did during my spare time. To prevent any resemblance to the original code, I skipped quite a lot of optimizations as well as basic code structuring, so this is far from production ready, and not a representation of my coding capabilities.. :'). However, it should be legible and usable as a starting point for your own implementations.

There are some bugs that I'm not sure I'm allowed to fix (since I need to avoid resemblance with the original implementation), but can and probably will impact the usage of this application. Fixing it should be quite easy though:
* The orientation of the extracted text isn't adjusted before being put through Tesseract. Also, the photo being taken isn't oriented according to how the device was held while the picture was being taken. This results in the somewhat user-unfriendly situation that the device should be held in landscape mode with the bottom pointing to the right when taking a picture, and the text should be oriented to show up right-side-up in the picture. The processed image that appears after the picture is shown should have the text displayed correctly when the device is held in NON-upside-down portrait mode.
* There is a weird bug when the camera is taking a picture, and some other application interrupts it. This may cause the CameraActivity to be closed, thus wiping the _image variable when its being reconstructed, which results in bad stuff in onActivityResult.. :')

You can basically use this code for whatever you want, with some limitations; see the LICENSE-file for details. 

   